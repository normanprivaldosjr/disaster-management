extend type Query @guard(with: ["api"]) {
    sources: [Source!]! @all
    source(id: ID @eq): Source @find
}

extend type Mutation @guard(with: ["api"]) {
    createSource(input: CreateSourceInput @spread): SourceResponse @field(resolver:"SourceMutator@create")
    updateSource(input: UpdateSourceInput @spread): SourceResponse @field(resolver:"SourceMutator@update")
}


type Source {
    id: ID
    source: String
    created_at: DateTime
    updated_at: DateTime
}

type SourceResponse {
    status: String
    message: String
    data: Source
}

input CreateSourceInput {
    source: String! @rules(apply: ["required"])
}

input UpdateSourceInput {
    id: ID! @rules(apply: ["required"])
    source: String
}