extend type Query {
    requests: [Request!]! @all
    request(id: ID @eq): Request @find
}

extend type Mutation {
  createRequest(input: RequestInput @spread): Request @field(resolver:"RequestMutator@create")
  updateRequest(input: UpdateRequestInput @spread): Request @field(resolver:"RequestMutator@update")
  deleteRequest(id: ID!): Request @field(resolver:"RequestMutator@delete")
}

type Request {
    id: ID
    user: User @belongsTo
    status: Status @belongsTo
    source: Source @belongsTo
    group: Group @belongsTo
    priority: String
    number_to_be_rescued: Int
    address: String
    contact_number: String
    created_at: DateTime
    updated_at: DateTime
}

input RequestInput {
  user_id: ID!
  status_id: ID!
  source_id: ID!
  group_id: ID!
  priority: String!
  number_to_be_rescued: Int
  address: String!
  contact_number: String!
}

input UpdateRequestInput {
  id: ID!
  user_id: ID
  status_id: ID
  source_id: ID
  group_id: ID
  priority: String
  number_to_be_rescued: Int
  address: String
  contact_number: String
}