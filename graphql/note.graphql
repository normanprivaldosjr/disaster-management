extend type Query @guard(with: ["api"]) {
    notes: [Note!]! @all
    note(id: ID @eq): Note @find
}

extend type Mutation @guard(with: ["api"]) {
    createNote(input: CreateNoteInput @spread): NoteResponse @field(resolver: "NoteMutator@create")
    updateNote(input: UpdateNoteInput @spread): NoteResponse @field(resolver: "NoteMutator@update")
    deleteNote(id: ID!): NoteResponse @field(resolver: "NoteMutator@delete")
}

type Note {
    id: ID
    user: User @belongsTo
    request: Request @belongsTo
    note: String
    created_at: DateTime
    updated_at: DateTime
}

type NoteResponse {
    status: String
    message: String
    data: Note
}

input CreateNoteInput {
    request_id: ID! @rules(apply: ["required"])
    note: String! @rules(apply: ["required"])
}

input UpdateNoteInput {
    id: ID! @rules(apply: ["required"])
    request_id: ID
    note: String
}